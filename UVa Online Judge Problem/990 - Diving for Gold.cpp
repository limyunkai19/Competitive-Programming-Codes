#include <iostream>#include <cstring>using namespace std;int gold[1010], value[40], depth[40], pre[1010], num[1010], taken[40];int t, w, n, anst, ansidx, ans, zerofactor, idx;int main(){	bool first = true;	while(cin >> t >> w >> n){		memset(gold, -1, sizeof gold);		gold[t] = 0; pre[t] = -1; num[t] = 0; zerofactor = 0;		for(int i = 0; i < n; i++){			taken[i] = 0;		}		for(int i = 0; i < n; i++){			cin >> depth[i] >> value[i];			if(depth[i] == 0){				taken[i] = 1;				zerofactor += value[i];				continue;			}			for(int j = 0; j <= t; j++){				if(gold[j] != -1){					if( j-3*w*depth[i] >= 0 && gold[j-3*w*depth[i]] < gold[j]+value[i]){						gold[j-3*w*depth[i]] = gold[j]+value[i];						pre[j-3*w*depth[i]] = i;						num[j-3*w*depth[i]] = num[j]+1;					}				}			}		}		ans = 0;		for(int j = 0; j <= t; j++){			if(gold[j] > ans){				ans = gold[j];				anst = j;				ansidx = pre[j];			}		}		cout << ans+zerofactor << endl << num[anst] << endl;		while(pre[anst] != -1){			cout << pre[anst] << endl;			taken[pre[anst]] = 1;			anst = anst + depth[pre[anst]]*w*3;		}		for(int i = 0; i < n; i++){			if(taken[i]){				cout << depth[i] << ' ' << value[i] << endl;			}		}				if(!first){			cout << endl;		}		first = false;			}		return 0;}